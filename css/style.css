/* Styling for Remixicon icons, ensuring correct content property for the default icon */
:where([class^="ri-"])::before { content: "\f3c2"; }

/* Global font family setting */
body {
    font-family: 'Inter', sans-serif;
}

/* Typing effect for the hero section heading */
.typing-effect::after {
    content: "|"; /* Cursor effect */
    animation: blink 1s infinite; /* Blinking animation for the cursor */
}

/* Keyframes for the blinking cursor animation */
@keyframes blink {
    0%, 100% { opacity: 1; } /* Cursor visible */
    50% { opacity: 0; } /* Cursor hidden */
}

/* Timeline specific styling for experience section */
/* Alternating layout for timeline items (even child) */
.timeline-item:nth-child(even) {
    flex-direction: row-reverse;
}

/* Align content and dot for even timeline items */
.timeline-item:nth-child(even) .timeline-content {
    text-align: right;
    align-items: flex-end;
}
.timeline-item:nth-child(even) .timeline-dot {
    left: -6px; /* Adjust position for even items */
}
.timeline-item:nth-child(odd) .timeline-dot {
    right: -6px; /* Adjust position for odd items */
}

/* Skill bar styling */
.skill-bar {
    position: relative;
    height: 6px;
    border-radius: 3px;
    background: #e5e7eb; /* Background for the empty part of the skill bar */
}

/* Skill progress inside the skill bar */
.skill-progress {
    height: 100%;
    border-radius: 3px;
    background: linear-gradient(90deg, #3b82f6, #60a5fa); /* Gradient for the filled part */
}

/* Focus styles for input and textarea elements */
input:focus, textarea:focus {
    outline: none; /* Remove default outline */
    border-color: #3b82f6; /* Change border color on focus */
}

/* Styling for range input (slider) */
input[type="range"] {
    -webkit-appearance: none; /* Remove default WebKit styling */
    appearance: none; /* Remove default styling */
    width: 100%;
    height: 6px;
    background: #e5e7eb; /* Track background */
    border-radius: 3px;
    outline: none;
}

/* Styling for range input thumb (the draggable part) */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none; /* Remove default WebKit styling */
    appearance: none; /* Remove default styling */
    width: 18px;
    height: 18px;
    border-radius: 50%; /* Make it circular */
    background: #3b82f6; /* Thumb color */
    cursor: pointer;
}

/* Custom checkbox styling */
.custom-checkbox {
    position: relative;
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 2px solid #d1d5db; /* Default border color */
    border-radius: 4px;
    transition: all 0.2s; /* Smooth transition for changes */
}

/* Checked state for custom checkbox */
.custom-checkbox.checked {
    background-color: #3b82f6; /* Blue background when checked */
    border-color: #3b82f6; /* Blue border when checked */
}

/* Checkmark icon for custom checkbox when checked */
.custom-checkbox.checked::after {
    content: "";
    position: absolute;
    top: 2px;
    left: 6px;
    width: 6px;
    height: 10px;
    border: solid white; /* White checkmark */
    border-width: 0 2px 2px 0;
    transform: rotate(45deg); /* Rotate to form a checkmark */
}

/* Custom switch (toggle) styling */
.custom-switch {
    position: relative;
    display: inline-block;
    width: 48px;
    height: 24px;
}

/* Switch track styling */
.switch-track {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #e5e7eb; /* Default track color */
    transition: .4s; /* Smooth transition for movement */
    border-radius: 34px; /* Rounded ends */
}

/* Switch thumb (the movable circle) styling */
.switch-thumb {
    position: absolute;
    height: 20px;
    width: 20px;
    left: 2px;
    bottom: 2px;
    background-color: white; /* Thumb color */
    transition: .4s; /* Smooth transition for movement */
    border-radius: 50%; /* Circular shape */
}

/* Active state for custom switch */
.switch-active .switch-track {
    background-color: #3b82f6; /* Blue track when active */
}

/* Move thumb when switch is active */
.switch-active .switch-thumb {
    transform: translateX(24px); /* Move thumb to the right */
}

/* Custom radio button styling */
.custom-radio {
    position: relative;
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 2px solid #d1d5db; /* Default border color */
    border-radius: 50%; /* Circular shape */
    transition: all 0.2s; /* Smooth transition */
}

/* Checked state for custom radio button */
.custom-radio.checked {
    border-color: #3b82f6; /* Blue border when checked */
}

/* Inner dot for custom radio button when checked */
.custom-radio.checked::after {
    content: "";
    position: absolute;
    top: 4px;
    left: 4px;
    width: 8px;
    height: 8px;
    border-radius: 50%; /* Inner dot shape */
    background-color: #3b82f6; /* Inner dot color */
}

/* Project card overlay effect on hover */
.project-card:hover .project-overlay {
    opacity: 1; /* Show overlay on hover */
}

/* Back to top button styling */
.back-to-top {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 100;
    opacity: 0; /* Hidden by default */
    visibility: hidden; /* Hidden for accessibility */
    transition: all 0.3s; /* Smooth transition for visibility */
}

/* Visible state for back to top button */
.back-to-top.visible {
    opacity: 1; /* Make visible */
    visibility: visible;
}

/* Scroll progress bar styling */
.scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    height: 3px;
    background: #3b82f6; /* Blue color for the progress bar */
    z-index: 1000;
    width: 0%; /* Starts at 0% width */
}
